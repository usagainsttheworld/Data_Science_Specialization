library (swirl)
swirl()
filter(cran,r_version=="3.1.1",country=="US")
?comparison
?Comparison
cran
filter(cran,r_version=<"3.1.1",country=="IN")
filter(cran,r_version=<"3.0.2",country=="IN")
filter(cran,r_version<="3.0.2",country=="IN")
filter(cran, country=="US" | country=="IN")
filter(cran, size>100500, r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,!is.na(r_version))
cran2<-select(size:ip_id)
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran2,ip_id,package,size)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size/2^10)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
summarize(cran,avg_bytes=mean(size))
library(dplyr)
cran<-tbl_df()
cran<-tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<-gourp_by(cran)
by_package<-gourp_by(cran,package)
by_package<-group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
library(swirl)
swirl()
View(top_counts)
arrange(top_counts,count)
arrange(top_counts,count)
bye()
swirl()
View(top_counts_sorted)
quantile(pack_sum$unique,probs=0.99)
top_unique<-filter(pack_sum,unique>465)
View(top_unique)
arrange(top_unique,desc(unique)
)
top_unique_sorted<-arrange(top_unique,desc(unique))
View()
View(top_unique_sorted)
submit()
submit()
byez9
bye()
swirl()
View(result3)
install.packages("e1071")
set.seed(3523)
library(AppliedPredictiveModeling)
library(e1071)
library(carret)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
set.seed(3523)
library(AppliedPredictiveModeling)
library(e1071)
library(caret)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
?e1071
?prdict.svm
?predict.svm
?svm
library(caret)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
training_svm<-svm(training)
predict.svm(training_svm)
predict.svm(training_svm)
library(caret)
library(e1071)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
training_svm<-svm(training)
predict.svm(training_svm)
?svm
set.seed(325)
modfit<-svm(CompressiveStrength~., data=training)
prediction<-predict(modfit, testing)
confusionMatrix(prediction, testing$CompressiveStrength)
confusionMatrix(prediction, testing$CompressiveStrength)
predict(modfit, testing)
prediction<-predict(modfit, testing)
confusionMatrix(prediction, testing$CompressiveStrength)
set.seed(3523)
library(AppliedPredictiveModeling)
library(e1071)
library(caret)
library(e1071)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
modfit<-train(CompressiveStrength~., data=training)
set.seed(3523)
library(AppliedPredictiveModeling)
library(e1071)
library(caret)
library(e1071)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
modfit<-cvm(CompressiveStrength~., data=training)
prediction<-predict(modfit, testing)
confusionMatrix(prediction, testing$CompressiveStrength)
?cvm
set.seed(3523)
library(AppliedPredictiveModeling)
library(e1071)
library(caret)
library(e1071)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
set.seed(325)
modfit<-svm(CompressiveStrength~., data=training)
prediction<-predict(modfit, testing)
confusionMatrix(prediction, testing$CompressiveStrength)
dim(prediction)
class(prediction)
str(prediction)
str(testing$CompressiveStrength)
?confusitonMatrix
?confusionMatrix
class(prediction)
class(testing$CompressiveStrength)
dim(testing$CompressiveStrength)
dim(prediction)
accuracy(prediction, testing$CompressiveStrength)
library(forecast)
accuracy(prediction, testing$CompressiveStrength)
sqrt2*2-2
sqrt2
8-9
sqrt2
?sqrt
sqrt(2)
sqrt(2)*2-2
table(grepl("Veh", scc$Short.Name))
setwd("~/Desktop/Coursera/Exploratory2_PM25")
rawdata<-readRDS("summarySCC_PM25.rds")
rawscc<-readRDS("Source_Classification_Code.rds")
#============================================
#Cleaning data
#Convert "year", "type", and "Pollutant" variables into factor variable
rawdata$year<-as.factor(rawdata$year)
rawdata$type<-as.factor(rawdata$type)
rawdata$Pollutant<-as.factor(rawdata$Pollutant)
summary(rawdata)
#It's been noticed that "Polutant" variable has no various (only one value through the dataset) so it was removed from the data set.
pm25<-subset(rawdata, select = -c(Pollutant))
#To get a closer look at "scc" data set (Source_Classification_Code). "SCC", "Short.Name", "EI.Sector", "SCC.Level.One", "SCC.Level.Two", "SCC.Level.Three", "SCC.Level.Four" are the variables related to this study so only these variables are kept for further analysis.
scc<-subset(rawscc, select = c(SCC, Short.Name, EI.Sector, SCC.Level.One, SCC.Level.Two, SCC.Level.Three, SCC.Level.Four))
#============================================
# Q1 How have emissions from motor vehicle sources changed from 1999â€“2008 in Baltimore City?
library(dplyr)
in scc data set.
table(grepl("Veh", scc$Short.Name))#
table(grepl("Veh", scc$EI.Sector))#
table(grepl("Veh", scc$SCC.Level.One))
table(grepl("Veh", scc$SCC.Level.Two))
table(grepl("Veh", scc$SCC.Level.Three))#
table(grepl("Veh", scc$SCC.Level.Four))#
Veh_notin_shortName<-scc[!grepl("Veh", scc$Short.Name), ]
table(grepl("Veh", Veh_notin_shortName$EI.Sector))
table(grepl("Veh", Veh_notin_shortName$SCC.Level.Two))
table(grepl("Veh", Veh_notin_shortName$SCC.Level.Three))
table(grepl("Veh", Veh_notin_shortName$SCC.Level.Four))
grep("Veh", Veh_notin_shortName$EI.Sector)
grep("Veh", Veh_notin_shortName$SCC.Level.Two)
grep("Veh", Veh_notin_shortName$EI.Sector) %in% grep("Veh", Veh_notin_shortName$SCC.Level.Two)
scc[grep("Veh", scc$Short.Name), ]
SNrow_veh<-scc[grep("Veh", scc$Short.Name), ] #rows are "Veh"related from Short.Name
SNrow_veh$SCC<-as.character(veh_coal$SCC) #convert SCC variable to characer
SNrow_veh$SCC
dim(SNrow_veh$SCC)
length(SNrow_veh$SCC)
EIrow_veh<-Veh_notin_shortName[grep("Veh", Veh_notin_shortName$EI.Sector), ] #rows are "Veh" related from EI.Sector
EIrow_veh$SCC<-as.character(EIrow_coal$SCC)
EIrow_veh$SCC# "Veh" related SCC from EI.Sector!
EIrow_veh<-Veh_notin_shortName[grep("Veh", Veh_notin_shortName$EI.Sector), ] #rows are "Veh" related from EI.Sector
EIrow_veh$SCC<-as.character(EIrow_veh$SCC)
EIrow_veh$SCC# "Veh" related SCC from EI.Sector!
ltwo_veh<-Veh_notin_shortName[grep("Veh", Veh_notin_shortName$SCC.Level.Two), ] #rows are "Veh" related from EI.Sector
ltwo_veh$SCC<-as.character(ltwo_veh$SCC)
ltwo_veh$SCC# "Veh" related SCC from EI.Sector!
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | ltwo_veh$SCC) %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
class(SNrow_veh$SCC)
SNrow_veh<-scc[grep("Veh", scc$Short.Name), ] #rows are "Veh" related from Short.Name
SNrow_veh$SCC<-as.character(veh_coal$SCC) #
SNrow_veh<-scc[grep("Veh", scc$Short.Name), ] #rows are "Veh" related from Short.Name
SNrow_veh$SCC<-as.character(SNrow_veh$SCC)
class(SNrow_veh$SCC )
length(SNrow_veh$SCC )
EIrow_veh<-Veh_notin_shortName[grep("Veh", Veh_notin_shortName$EI.Sector), ] #rows are "Veh" related from EI.Sector
EIrow_veh$SCC<-as.character(EIrow_veh$SCC)
class(EIrow_veh$SCC)
length(EIrow_veh$SCC)
ltwo_veh<-Veh_notin_shortName[grep("Veh", Veh_notin_shortName$SCC.Level.Two), ] #rows are "Veh" related from EI.Sector
ltwo_veh$SCC<-as.character(ltwo_veh$SCC)
length(ltwo_veh$SCC)
class(ltwo_veh$SCC)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | ltwo_veh$SCC) %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
str(pm25)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | ltwo_veh$SCC) %>%
#filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
str(pm25$SCC)
str(SNrow_veh$SCC)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC) %>%
#filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | ltwo_veh$SCC) %>%
#filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
str(ltwo_veh$SCC)
str(EIrow_veh$SCC)
veh_baltimore_pm25<-pm25 %>%
filter( SCC %in% EIrow_veh$SCC | ltwo_veh$SCC) %>%
#filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
#filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
dim(veh_baltimore_pm25)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC)
dim(veh_baltimore_pm25)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
filter(fips == "24510")
dim(veh_baltimore_pm25)
veh_baltimore_pm25<-pm25 %>%
#filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
filter(fips == "24510")
dim(veh_baltimore_pm25)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
filter(fips == "24510")
dim(veh_baltimore_pm25)
veh_baltimore_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>%
filter(fips == "24510") %>%
group_by(year) %>%
summarize(veh_baltimore_sum=sum(Emissions))
veh_baltimore_pm25
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = year_pm25$year, main="PM2.5 from VEHICLE in Baltimore from 1999 to 2008", xlab="Year", ylab="PM2.5" )
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = veh_baltimore_pm25$year, main="PM2.5 from VEHICLE in Baltimore from 1999 to 2008", xlab="Year", ylab="PM2.5" )
dev.copy(png, file="plot5.png", width=480, height=480, units="px")
dev.off()
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = veh_baltimore_pm25$year, main="PM2.5 from VEHICLE in Baltimore 1999 to 2008", xlab="Year", ylab="PM2.5" )
#The above plot is about the PM2.5 emissions from Vehicle related sources in Baltimore from 1999 to 2008. As we can see, the emission droped by half from 1999 to 2002 following by a smooth decrease from 2002 to 2008.
#==============================================
#Save plot in PNG file.
dev.copy(png, file="plot5.png", width=480, height=480, units="px")
dev.off()
library(ggplot2)
veh_LA_pm25<-pm25 %>%
filter(SCC %in% SNrow_veh$SCC | SCC %in% EIrow_veh$SCC | SCC %in% ltwo_veh$SCC) %>% #to get rows only from "Veh" related sources
filter(fips == "06037") %>% #to get rows only from LA
group_by(year) %>% #to gourp by year
summarize(veh_LA_sum=sum(Emissions)) #sum of each year within the group
par(mfrow=c(1,2), mar=c(4,4,2,1))
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = veh_baltimore_pm25$year, main="PM2.5 from VEHICLE in Baltimore 1999 to 2008", xlab="Year", ylab="PM2.5" )
par(mfrow=c(1,2), mar=c(4,4,2,1))
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = veh_baltimore_pm25$year, main="PM2.5 from VEHICLE in Baltimore 1999-2008", xlab="Year", ylab="PM2.5" )
barplot(veh_LA_pm25$veh_LA_sum, names.arg = veh_LA_pm25$year, main="PM2.5 from VEHICLE in LA 1999-2008", xlab="Year", ylab="PM2.5" )
par(mfrow=c(1,2), mar=c(5,5,2,1))
barplot(veh_baltimore_pm25$veh_baltimore_sum, names.arg = veh_baltimore_pm25$year, main="PM2.5 from VEHICLE in Baltimore 1999-2008", xlab="Year", ylab="PM2.5" )
barplot(veh_LA_pm25$veh_LA_sum, names.arg = veh_LA_pm25$year, main="PM2.5 from VEHICLE in LA 1999-2008", xlab="Year", ylab="PM2.5" )
veh_LA_pm25
dev.copy(png, file="plot6.png", width=480, height=480, units="px")
dev.off()
dev.copy(png, file="plot6.png", width=680, height=480, units="px")
dev.off()
dev.copy(png, file="plot6.png", width=880, height=480, units="px")
dev.off()
dev.copy(png, file="plot6.png", width=980, height=580, units="px")
dev.off()
